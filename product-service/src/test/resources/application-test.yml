spring:
  application:
    name: product-service-test

  main:
    allow-bean-definition-overriding: true

  # Embedded PostgreSQL or test container (you can mock DB in most unit tests)
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/testdb
    username: postgres
    password: postgres

  # Disable Flyway for isolated unit tests
  flyway:
    enabled: false

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers:localhost:9092}
    consumer:
      group-id: product-service-test-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      ack-mode: record
      missing-topics-fatal: false
      concurrency: 1

  # Logging to show message flow during tests
  logging:
    level:
      root: WARN
      org.springframework.kafka: INFO
      com.ecommerce.productservice: DEBUG

# Reactive test-specific configuration
reactor:
  debug-agent:
    enabled: false

# Springdoc (Swagger) disabled in tests
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Server mock config
server:
  port: 0
