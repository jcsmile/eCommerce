server.port=8081
spring.main.web-application-type=reactive
spring.application.name=product-service
#spring.data.mongodb.uri=mongodb://localhost:27017/product-service
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/product
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres
spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://localhost:5432/product
spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.locations=classpath:db/migrations
spring.flyway.baseline-on-migrate=true
jwt.secret=mysecretkey
management.endpoints.web.exposure.include=prometheus,health,info
logging.level.root=INFO
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=product-service-group
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ecommerce.productservice.event
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.template.topic.name=payment-success-events
spring.kafka.consumer.properties.spring.json.value.default.type=com.ecommerce.productservice.event.ProductStockEvent
resilence4j.circuitbreaker.instances.productServiceCB.register-health-indicator=true
resilence4j.circuitbreaker.instances.productServiceCB.sliding-window-size=10
resilence4j.circuitbreaker.instances.productServiceCB.permitted-number-of-calls-in-half-open-state=5
resilence4j.circuitbreaker.instances.productServiceCB.minimum-number-of-calls=5
resilence4j.circuitbreaker.instances.productServiceCB.wait-duration-in-open-state=10s
resilence4j.circuitbreaker.instances.productServiceCB.failure-rate-threshold=50
resilence4j.circuitbreaker.instances.productServiceCB.event-consumer-buffer-size=10
resilence4j.circuitbreaker.instances.productServiceCB.automatic-transition-from-open-to-half-open-enabled=true
resilence4j.timelimiter.instances.productServiceCB.timeout-duration=5s
resilence4j.retry.instances.productServiceCB.max-attempts=3
resilence4j.retry.instances.productServiceCB.wait-duration=1s
resilence4j.retry.instances.productServiceCB.retry-exceptions=java.io.IOException,org.springframework.dao.QueryTimeoutException
resilence4j.retry.instances.productServiceCB.ignore-exceptions=java.lang.IllegalArgumentException
resilence4j.ratelimiter.instances.productServiceCB.limit-for-period=10
resilence4j.ratelimiter.instances.productServiceCB.limit-refresh-period=1s
resilence4j.ratelimiter.instances.productServiceCB.timeout-duration=2s

# max 10 concurrent calls per instance
resilience4j.thread-pool-bulkhead.instances.productServiceCB.max-thread-pool-size=10     
# wait for slot for up to 2 s before rejecting
resilience4j.thread-pool-bulkhead.instances.productServiceCB.core-thread-pool-size=5        
resilience4j.thread-pool-bulkhead.instances.productServiceCB.queue-capacity=20              
resilience4j.thread-pool-bulkhead.instances.productServiceCB.keep-alive-duration=60s
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always

